# Redirect all HTTP traffic to HTTPS
server {
  listen 80;
  server_name rgscreens.app www.rgscreens.app;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://rgscreens.app$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name rgscreens.app www.rgscreens.app;

  ssl_certificate /etc/letsencrypt/live/rgscreens.app/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/rgscreens.app/privkey.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers on;

  if ($host = 'www.rgscreens.app') {
    return 301 https://rgscreens.app$request_uri;
  }

  root /usr/share/nginx/html;
  index index.html;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Serve all static files from /public
  location ~ ^/(robots\.txt|manifest\.json|google[0-9a-zA-Z_-]+\.html|og-image\.(png|jpg|jpeg)|icons/.*)$ {
    root /usr/share/nginx/html;
    access_log off;
    add_header Cache-Control "public, max-age=86400";
  }

  location / {
    try_files $uri $uri/ /index.html;
    add_header Last-Modified $date_gmt;
    add_header Cache-Control "no-store";
  }

  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";
}